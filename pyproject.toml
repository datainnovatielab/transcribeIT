[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "nota-bene"
dynamic = ["version", "readme"]
description = "AI geassisteerde notuleertool. Maakt gebruik van OpenAI's whisper voor transcriberen, en OpenAI's GPT-4o-mini voor opstellen van notulen."
keywords = ["nota-bene"]
authors = [
    {name = "Data- en Innovatielab", email = "codebase.dilab@minienw.nl"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "markdown-pdf>=1.3.3",
    "openai>=1.60.0",
    "streamlit>=1.41.1",
    "openai-whisper",
]
requires-python = ">=3.10"

[project.urls]
homepage = "https://gitlab.com/datainnovatielab/projects/nota-bene"
repository = "https://gitlab.com/datainnovatielab/projects/nota-bene"
changelog = "https://gitlab.com/datainnovatielab/projects/nota-bene/blob/main/CHANGELOG.rst"

[project.optional-dependencies]
dev = [
    "bandit[toml]",
    "black",
    "flake8",
    "flake8-bugbear",
    "flake8-comprehensions",
    "flake8-docstrings",
    "flake8-polyfill",
    "flake8-pyproject",
    "isort",
    "mypy",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "rstcheck[sphinx]",
    "radon",
    "safety",
]
docs = [
    "pydata-sphinx-theme",
    "sphinx",
    "sphinx-autodoc-typehints",
]

[project.scripts]
notabene = "nota_bene.app:main_run"

[tool.setuptools]
include-package-data = false
license-files = ["LICENSE"]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["nota_bene", "nota_bene.*"]

[tool.setuptools.package-data]
"nota_bene" = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "nota_bene.__version__"}
readme = {file = ["README.rst"]}

[tool.bandit]
exclude_dirs = ["tests"]

[tool.isort]
profile = "black"
known_first_party = ["nota_bene"]
skip_glob = ".venv/**,tests/**,docs/**"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
ignore_missing_imports = true

[tool.pylint]
extension-pkg-whitelist = ""
fail-under = 8.0

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov --cov-report xml --cov-report term --cov-report html"

[tool.coverage.run]
branch = true
source = ["nota_bene"]

[tool.black]
line-length = 88
target-version = ["py310", "py311"]

[tool.flake8]
max-line-length = 88
max-complexity = 4
docstring-convention = 'numpy'
exclude = ['^docs/','__init__.py','^tests/']
# ignore:
# C812 - Missing trailing comma
# C813 - Missing trailing comma in Python 3
# E203 - Whitespace before ':' - not pep8
# E501 - max line length
# W503 - Line break occured before a binary operator - not pep8
# use bugbear B950 instead of E501
#
# select
# B950 - Max line length - gives 10% allowance

ignore=['C812','C813','E203','E501','W503']
select = ['C','D','E','F','W','B','B950']
